// Basic Requirements

// A - 0 

function each(coll, f) {
	if (!Array.isArray(coll)){
		for (var key in coll){
			f(coll[key], key);
		}
	} else {
		for (var i = 0 ; i <coll.length ; i++){
			f(coll[i], i);
		}	
	}
}

function filter(coll, predicate) {
	var acc = [];
	each(coll, function(element) {
		if (predicate(element)) {
			acc.push(element)
		}
	});
	return acc;
}

var people = [
	{name: "Alyssa", age: 22},
	{name: "Ben", age: 36},
	{name: "Lem", age: 42},
	{name: "Eva", age: 19},
	{name: "Louis", age: 33}
];

function olderThan30(people) {
	return filter(people, function(person){
		return person.age > 30;
	});
}

// A - 1

function evens(array){
	return filter(array, function(number){
		return number % 2 === 0;
	});
}

function multiplesOfThree(array){
	return filter(array, function(number){
		return number % 3 === 0;
	});
}

function positives(array){
	return filter(array, function(number){
		return number >= 0;
	});
}

function evenLengths(array){
	return filter(array, function(str){
		return str.length % 2 === 0;
	});
}

// More Practice

// A - 1

function odds(array){
	return filter(array, function(number){
		return number % 2 ===1;
	});
}

function negatives(array){
	return filter(array,function(number){
		return number < 0;
	});
}

function largerThanSix(array){
	return filter(array,function(number){
		return nubmer>6;
	});
}


function startsWithChar(strings, char){
	return filter(strings, function(str){
		return str[0]=== char;
	});
}

function filter(coll, predicate) {
	var acc = [];
	each(coll, function(element,index) {
		if (predicate(element,index)) {		
			acc.push(element)
		}
	});
	return acc;
}

function evenIndexedEvenLengths(array){
	return filter(array,function(element,index){
		
		return index%2===0 && element.length% 2 === 0
	});
}

function filter(coll, predicate) {
	var acc = [];
	if (!Array.isArray(coll)){
	    acc={};
        each(coll, function(element,key) {
		if (predicate(element,key)) {		
			acc[key]=element;
		}
	});
	return acc;
	}else{
	each(coll, function(element,key) {
		if (predicate(element,key)) {		
			acc.push(element);
		}
	});
	return acc;
}}

function moveZero(array){

    return filter(array,function(number){

        return number !== 0;
    });

}
